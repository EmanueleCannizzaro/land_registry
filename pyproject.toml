[project]
description = "Land Registry"
name = "land_registry"
version = "0.1.1" 
requires-python = '>=3.11'
dependencies = [
    # Core dependencies
    "jinja2>=3.0.0",
    "pydantic>=2.0.0",
    "sqlmodel>=0.0.8",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
1    "s3fs>=2023.10.0",
    "fsspec>=2023.10.0",
]

[tool.black]
line_length = 120
# target_version = ['py37', 'py38', 'py39', 'py310']
exclude = '__pycache__'

[tool.isort]
profile = "black"
filter_files = ["__pycache__"]

[project.optional-dependencies]
auth = [
    "authlib>=1.6.2",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "cryptography>=41.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    "redis>=5.0.0"
]

encryption = [
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "coverage>=7.6.0"
]

test = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0", 
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "coverage>=7.6.0",
    "tox>=4.0.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--cov=invoices",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests", 
    "slow: marks tests as slow",
    "parser: marks tests for parser functionality",
    "database: marks tests for database operations",
    "workflow: marks tests for Prefect workflows",
    "web: marks tests for web interface"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["invoices"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod"
]

[tool.setuptools.packages.find]
where = ["land_registry"]
